"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[342],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),f=s,m=u["".concat(l,".").concat(f)]||u[f]||d[f]||a;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:s,o[1]=i;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4849:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(7462),s=(n(7294),n(3905));const a={sidebar_position:6},o="SVM",i={unversionedId:"svm",id:"svm",title:"SVM",description:"Le SVM (Support Vector Machine) est un mod\xe8le d'apprentissage automatique utilis\xe9 pour la classification et la r\xe9gression. Il consiste \xe0 trouver un hyperplan dans un espace \xe0 n dimensions qui s\xe9pare le mieux possible les diff\xe9rentes classes de donn\xe9es.",source:"@site/docs/svm.md",sourceDirName:".",slug:"/svm",permalink:"/nlp_project/docs/svm",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/svm.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Random forest",permalink:"/nlp_project/docs/random_forest"},next:{title:"Word2Vec",permalink:"/nlp_project/docs/w_to_vec"}},l={},c=[{value:"6.1 SVM BoW",id:"61-svm-bow",level:3},{value:"6.2 Svm with tf-idf",id:"62-svm-with-tf-idf",level:3}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"svm"},"SVM"),(0,s.kt)("p",null,"Le SVM (Support Vector Machine) est un mod\xe8le d'apprentissage automatique utilis\xe9 pour la classification et la r\xe9gression. Il consiste \xe0 trouver un hyperplan dans un espace \xe0 n dimensions qui s\xe9pare le mieux possible les diff\xe9rentes classes de donn\xe9es."),(0,s.kt)("p",null,"Pour illustrer, imaginez que vous avez des donn\xe9es de deux classes, A et B, qui sont s\xe9par\xe9es par un hyperplan. Un SVM cherchera \xe0 trouver l'hyperplan qui s\xe9pare le mieux les deux classes de donn\xe9es en maximisant la distance entre l'hyperplan et les points les plus proches de chaque classe (appel\xe9s vecteurs de support). Cette distance est appel\xe9e marge."),(0,s.kt)("p",null,"Le SVM est souvent utilis\xe9 lorsque les donn\xe9es ne peuvent pas \xeatre s\xe9par\xe9es de mani\xe8re lin\xe9aire et qu'il est n\xe9cessaire d'utiliser une fonction de transformation non lin\xe9aire pour s\xe9parer les donn\xe9es. Dans ce cas, le SVM utilise une fonction de transformation appel\xe9e noyau pour projeter les donn\xe9es dans un espace \xe0 plus haute dimension o\xf9 elles peuvent \xeatre s\xe9par\xe9es de mani\xe8re lin\xe9aire."),(0,s.kt)("p",null,"Le SVM est souvent utilis\xe9 dans de nombreux domaines, notamment la reconnaissance de formes, la vision par ordinateur et la d\xe9tection de spam, pour classer des donn\xe9es en deux ou plusieurs classes."),(0,s.kt)("h3",{id:"61-svm-bow"},"6.1 SVM BoW"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"from sklearn.svm import SVC\nsv = SVC(kernel='linear', C=1E10)\nbow_sv = sv.fit(cv_train, train_category)\nbow_sv_test_predictions = bow_sv.predict(cv_test)\nprint(bow_sv_test_predictions)\nprint(test_category)\nc = 0\nfor x,y in zip(test_category, bow_sv_test_predictions):\n    if x == y:\n        c+=1\n\nprint('Accuracy:',c/len(test_category))\n#Accuracy: 0.9640449438202248\n")),(0,s.kt)("h3",{id:"62-svm-with-tf-idf"},"6.2 Svm with tf-idf"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"tf = TfidfVectorizer(stop_words='english') #ici on peut ajouter min_df, max_df. voir la doc de TfidfVectorizer !!\ntf_X = tf.fit_transform(X)\nprint(tf_X.shape)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\nprint(len(X_train))\n\ntf_train = tf.transform(X_train)\ntf_test = tf.transform(X_test)\n\ntrain_category = le.fit_transform(y_train)\ntest_category = le.fit_transform(y_test)\n\nsv = SVC()\ntfidf_sv = sv.fit(tf_train, train_category)\n\nlen(test_category)\n\ntfidf_sv.score(tf_test,test_category)\n#0.9662921348314607\n")))}u.isMDXComponent=!0}}]);